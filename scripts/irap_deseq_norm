#!/usr/bin/env Rscript3
# =========================================================
#
# This file is part of iRAP.
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with iRAP.  If not, see <http://www.gnu.org/licenses/>.
#
#
#    $Id: 0.1.3 Nuno Fonseca Sat Dec 22 00:49:17 2012$
# =========================================================

suppressPackageStartupMessages(library("optparse"))

IRAP.DIR <- Sys.getenv(c("IRAP_DIR"))
if ( IRAP.DIR == "" ) {
  cat("ERROR: environment variable IRAP_DIR is not set\n")
  q(status=1)
}

# specify our desired options in a list
#
source(paste(IRAP.DIR,"aux/R","irap_utils.R",sep="/"))

# normalize a matrix with counts using DESeq

args <- commandArgs(trailingOnly=TRUE)

#TODO: print error messages and exit

#
# irap_deseq_norm count_matrix annot_file.gtf
#min_reads contrasts labels
count_file <- args[1];# matrix with the counts
#annot_file <- args[2]
#min_reads  <- args[3];# exclude counts < min_reads
#contrasts  <- args[4];# ;, separate list of groups
                      # ex. file1,file2;file3,file4
#labels     <- args[5]

data <- read.tsv(count_file)
conds <- colnames(data)[-1]

library(DESeq)

#Note: counts of technical replicates  have to be summed up into a single column
vals <- as.matrix(data[,-1])
storage.mode(vals) <- "integer" 
cds <- newCountDataSet(vals,conds)

#normalize the number of read counts
cds <- estimateSizeFactors(cds)
normalize=TRUE
if (sum(is.na(sizeFactors(cds)))) { 
  normalize=FALSE
  pwarning("normalization failed")
}
#print(sizeFactors(cds))

Gene<-data[,1]
t<-counts(cds,normalized=normalize)
df<-data.frame(t)
df<-cbind(Gene,df)
colnames(df) <- colnames(data)
write.table(df,"",sep="\t",col.names=TRUE,row.names=F,quote=FALSE)
quit("yes",status=0)
