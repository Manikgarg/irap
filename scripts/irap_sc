#!/bin/sh
#; -*- mode: Makefile;-*-
#the next line restarts using\
exec make --warn-undefined-variables -Rf "$0"  ${1+"$@"} 
# send the standard output to a log file --quiet
# exec bash -c 'make  --warn-undefined-variables -Rf "$0" ${1+"$@"}  | tee  `date "+%d%m%y%H%M"`.log" - 
# =========================================================
# Copyright 2012-2017,  Nuno A. Fonseca (nuno dot fonseca at gmail dot com)
#
# This file is part of iRAP.
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with iRAP.  If not, see <http://www.gnu.org/licenses/>.
#
#
# =========================================================

##################
# Setup some paths
# path to script
path=.
path?=$(shell if which irap >/dev/null 2>/dev/null; then dirname $(MAKEFILE_LIST); else dirname `which irap`; fi)

ifdef path
 PATH:=$(path):$(PATH)
endif

# Requires make 4.1 or above
VERSION_OK=$(shell if [ `make --version|head -n 1 | cut -f3 -d\ ` \< 4.1 ]; then echo 0; else echo 1; fi )
ifeq ($(VERSION_OK),0)
 $(error make version needs to be 4.1 or above)
endif

irap_path:=$(shell dirname `which irap`)


#####################################################################
#
override rnaseq_type:=sc
sc_protocol?=10x_v2
quant_method?=umi_count

#####################################################################
# default options for each protocol
# obviously, may be overriden by the users
#####################################################################

# Drop-seq
ifeq ($(sc_protocol),drop-seq)
mapper?=kallisto
quant_method?=umi_count
endif

# 10X v2
ifeq ($(sc_protocol),10x_v2)
mapper?=kallisto
quant_method?=umi_count
#bam_umi_count_params?=--min_reads 0 --multi_mapped
# --cb_cutoff Number of counts to filter cellular barcodes.
#umis_params?=--cb_cutoff auto
sc_non_zero_rows?=1
cell_filt_min_features?=0.3
cell_filt_max_ERCC?=0.75
cell_filt_outliers?=y
qc?=report
#trim_poly_at?=
#trim_poly_at_len=10
endif


# 10X v1
ifeq ($(sc_protocol),10x_v1)
quant_method?=umi_count
mapper?=kallisto
endif

# smart-seq
ifeq ($(sc_protocol),smart-seq)
mapper?=none
quant_method?=kallisto
#trim_poly_at?=y
#trim_poly_at_len=8
qc?=on
endif

# rsem_params+= --single-cell-prior
#####################################################################
# Default target - sc RNA-seq
all: setup quality_filtering_and_report mapping quantification filter_cells clustering

include $(irap_path)/../aux/mk/irap_core.mk

# Checks for each protocol


