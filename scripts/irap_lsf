#!/usr/bin/env bash
# =========================================================
# Copyright 2012-2018,  Nuno A. Fonseca (nuno dot fonseca at gmail dot com)
#
# This file is part of iRAP.
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with iRAP.  If not, see <http://www.gnu.org/licenses/>.
#
#
# =========================================================
#Send irap jobs to the farm - if paired end files, parallelize
#Input: a config file and irap parameters
#Output: send jobs on the farm
set -e 
function stop_now {
    cur_level=$1
    wfc=$2
    shift 2
    pend=$*
    if [ "$wave-" == "$cur_level-" ]; then
	final_job $pend $wfc $cur_level
	exit
    fi
}

function usage {
    echo "irap_lsf [-s -l level] irap options"
}
###################################
level=6
irap_cmd=irap
DEBUG=0
stage0_only=n

# DEBUG=1 - prints all lsf commands
# DEBUG=2 - prints all irap commands

while getopts "l:sdD0"  Option; do
    case $Option in
	s ) irap_cmd=irap_sc;;
        l ) level=$OPTARG;;
	0 ) stage0_only=y;;  
	d ) DEBUG=1;;
	D ) DEBUG=2;;
	h) usage; exit;;
    esac
done

shift $((OPTIND-1))
if [ "$DEBUG-" != "0-" ]; then
    echo "DEBUG enabled ($DEBUG)"
fi


###################################
# load shared code
LSF_CMD=irap_lsf
source $IRAP_DIR/aux/sh/irap_fun.sh
source $IRAP_DIR/aux/sh/lsf_shared_code.sh
cmd="$irap_cmd "

if [ "$stage0_only-" == "y-" ]; then
    IRAP_PARAMS="$IRAP_PARAMS do_stage0_only=1"
    level=2
fi

wave=$level
set +e


echo "Checking current status..."
$cmd conf=$conf $IRAP_PARAMS -n -q
let ret=$?
if [ $ret -eq 0 ]; then
    echo "All done - no need to submit jobs"
    exit 0
fi
if [ $ret -eq 1 ]; then
    echo "Starting job submission..."
else
    echo "ERROR: please run"
    echo "$cmd conf=$conf $IRAP_PARAMS quickcheck -n -q"
    echo "before runnig irap_lsf and address the error messages"
    exit 1
fi
echo "Starting job submission..."

wfb=`irap_init_job|tail -n 1`
wf0=`submit_jobs4stage $wfb 0|tail -n 1`
stop_now 0 $wfb $wf0
wf1=`submit_jobs4stage $wf0 1|tail -n 1`
stop_now 1 $wfb $wf1
wf2=`submit_jobs4stage $wf1 2|tail -n 1`
stop_now 2 $wfb $wf2

wf3p=`submit_jobs4stage $wf2 3_p|tail -n 1`
wf3s=`submit_jobs4stage $wf3p 3_s|tail -n 1`
wf3=`submit_jobs4stage $wf3s 3|tail -n 1`
stop_now 3 $wfb $wf3
wf4=`submit_jobs4stage $wf3 4|tail -n 1`
stop_now 4 $wfb $wf4
wf5=`submit_jobs4stage $wf4 5 |tail -n 1`
stop_now 5 $wfb $wf5
wf6=`submit_jobs4stage $wf5 6 |tail -n 1`
stop_now 6 $wfb $wf6
wf7=`submit_jobs4stage $wf6 7 |tail -n 1`

final_job $wf7 $wf0 7
exit

