#!/usr/bin/env bash
# =========================================================
# Copyright 2012-2017,  Nuno A. Fonseca (nuno dot fonseca at gmail dot com)
#
# This file is part of iRAP.
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with iRAP.  If not, see <http://www.gnu.org/licenses/>.
#
#
# =========================================================
#Send irap jobs to the farm - if paired end files, parallelize
#Input: a config file and irap parameters
#Output: send jobs on the farm
set -e 
function stop_now {
    cur_status=$1
    shift 1
    wf1=$1
    shift 1
    pend=$*
    if [ "$wave-" == "$cur_status-" ]; then
	final_job $pend $wf1
	exit
    fi
}

function usage {
    echo "irap_lsf [-s -l level] irap options"
}
###################################
level=6
irap_cmd=irap
DEBUG=0

# DEBUG=1 - prints all lsf commands
# DEBUG=2 - prints all irap commands

while getopts "l:sdD"  Option; do
    case $Option in
	s ) irap_cmd=irap_sc;;
        l ) level=$OPTARG;;
	d ) DEBUG=1;;
	D ) DEBUG=2;;
	h) usage; exit;;
    esac
done

shift $((OPTIND-1))
if [ "$DEBUG-" != "0-" ]; then
    echo "DEBUG enabled ($DEBUG)"
fi
echo $*


###################################
# load shared code
LSF_CMD=irap_lsf
source $IRAP_DIR/aux/sh/irap_fun.sh
source $IRAP_DIR/aux/sh/lsf_shared_code.sh
cmd="$irap_cmd "

wave=$level
set +e
echo "Chcking current status..."
$cmd conf=$conf $IRAP_PARAMS -n -q

if [ $? -eq 0 ]; then
    echo "All done - no need to submit jobs"
    exit 0
fi
if [ $? -eq 1 ]; then
    echo "Starting job submission..."
else
    echo "ERROR: please run"
    echo "$cmd conf=$conf $IRAP_PARAMS -n -q"
    echo "before runnig irap_lsf and address the error messages"
    exit 1
fi
echo "Starting job submission..."

wf1=`irap_init_job|tail -n 1`
wf2=`stage0_jobs $wf1|tail -n 1`
stop_now 0 $wf1 $wf2
if [ "$level-" == "1-" ]; then
    wf3=`stage1_jobs $wf2|tail -n 1`
    stop_now 1  $wf1 $wf3
else
    if [ "$level-" == "2-" ]; then
	wf3=`stage12_jobs $wf2|tail -n 1`
	stop_now 2  $wf1 $wf3
    else
	wf3=`stage123_jobs $wf2|tail -n 1`
    fi
fi
wf4=`stage3_jobs $wf3|tail -n 1`
stop_now 3 $wf1 $wf4
wf5=`stage4_jobs $wf4|tail -n 1`
stop_now 4 $wf1 $wf5
wf6=`stage5_jobs $wf5 |tail -n 1`

final_job $wf6 $wf1
exit

